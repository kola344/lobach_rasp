from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, KeyboardButton, ReplyKeyboardMarkup
from datetime import datetime

import config
from date_functions import generate_date_range
import api

replic_hello = 'üòÑ –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —É–º–µ–µ—Ç –≤—ã–¥–∞–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –≥—Ä—É–ø–ø—ã\n‚û°Ô∏è –ß—Ç–æ–±—ã –Ω–∞–∑–Ω–∞—á–∏—Ç—å —Å–µ–±–µ —Å–≤–æ—é –≥—Ä—É–ø–ø—É, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ –µ—ë\n–ü—Ä–∏–º–µ—Ä:\n3824–ë1–ü–ò2'
replic_group_set_fail = '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∑–Ω–∞—á–∏—Ç—å –≥—Ä—É–ø–ø—É. –ü—Ä–æ–≤–µ—Ä—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã.\n–ï—Å–ª–∏ –≥—Ä—É–ø–ø–∞ –Ω–∞–ø–∏—Å–∞–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ, —Ç–æ, –≤–æ–∑–º–æ–∂–Ω–æ, –ø–æ—Ä—Ç–∞–ª –õ–æ–±–∞—á–µ–≤—Å–∫–æ–≥–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç'
replic_error = 'üòï –û—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã, –≤—ã–±—Ä–∞–Ω–Ω—É—é –≥—Ä—É–ø–ø—É –∏ —Ä–æ–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –ø–æ—Ä—Ç–∞–ª–∞ –ù–ù–ì–£'

schedule_keyboard = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='–°–µ–≥–æ–¥–Ω—è'), KeyboardButton(text='–ó–∞–≤—Ç—Ä–∞')],
                                        [KeyboardButton(text='–ù–µ–¥–µ–ª—è'), KeyboardButton(text='–°–ª–µ–¥—É—é—â–∞—è')]],
                                        resize_keyboard=True)

def replic_group_set_success(group, desc):
    return f'‚úîÔ∏è –ì—Ä—É–ø–ø–∞ —É—Å–ø–µ—à–Ω–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞: {group}\n{desc}\n\nüî¢ –ù–∞–∂–∏–º–∞–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ\n‚úèÔ∏è –ò–ª–∏ –≤–≤–µ–¥–∏ "–ù–µ–¥–µ–ª—è –ù–û–ú–ï–†", —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–¥–µ–ª—å –≤–ø–µ—Ä–µ–¥', schedule_keyboard

async def replic_get_schedule(dates: list, group_id):
    text = 'üóìÔ∏è –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ\n'
    date_start, date_finish = dates[0], dates[1]
    days = generate_date_range(dates)
    data = await api.get_schedule(group_id, date_start, date_finish)
    if data is None:
        return 'üòï –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ. –ü—Ä–æ–≤–µ—Ä—å, –≤—ã–±—Ä–∞–Ω–∞ –ª–∏ —É —Ç–µ–±—è –≥—Ä—É–ø–ø–∞ –∏–ª–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ –ø–æ—Ä—Ç–∞–ª –ù–ù–ì–£'
    for day in days:
        need_add = False
        week_day = datetime.strptime(day, "%Y.%m.%d").weekday()
        add_text = f'üìÜ {day} - {config.days[week_day]}\n////////////////////\n'
        for i in data:
            if i['date'] == day:
                kindofOfWork = i['kindOfWork']
                sep_title = ''
                sep = ''
                if '–õ–µ–∫—Ü–∏—è' in kindofOfWork:
                    sep_title = 'üìó'
                    sep = 'üåµ'
                elif '–ü—Ä–∞–∫—Ç–∏–∫–∞' in kindofOfWork:
                    sep_title = 'üìô'
                    sep = 'üî∂'
                elif '–õ–∞–±–æ' in kindofOfWork:
                    sep_title = 'üìò'
                    sep = 'üî∑'
                add_text += f'{sep_title} {i["beginLesson"]} - {i["endLesson"]} {i["kindOfWork"]}\n{i["discipline"]}\n{sep} {i["lecturer"]}\n{sep} {i["auditorium"]}[{i["building"]}]\n\n'
                need_add = True
        if need_add:
            text += f'{add_text}\n'
    return text
